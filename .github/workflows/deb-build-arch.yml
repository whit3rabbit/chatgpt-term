name: Cross-compile

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  push:
    branches:
      - main

jobs:
  build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, armel, armhf, i386]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies and cross-compilers
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev libcrypto++-dev zlib1g-dev libcurl4-openssl-dev libcjson-dev \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            gcc-arm-linux-gnueabi g++-arm-linux-gnueabi \
            gcc-i686-linux-gnu g++-i686-linux-gnu debhelper
          
      - name: Configure and build
        run: |
          case "${{ matrix.arch }}" in
            amd64)  compiler_prefix="" ;;
            arm64)  compiler_prefix="aarch64-linux-gnu-" ;;
            armel)  compiler_prefix="arm-linux-gnueabi-" ;;
            armhf)  compiler_prefix="arm-linux-gnueabihf-" ;;
            i386)   compiler_prefix="i686-linux-gnu-" ;;
          esac
          export CC="${compiler_prefix}gcc"
          export CXX="${compiler_prefix}g++"
          ./configure --host="${{ matrix.arch }}"
          make

      - name: Create DEB package
        run: |
          sudo apt-get install -y devscripts
          mkdir -p deb_output
          cp -r ./* deb_output/
          cd deb_output
          debuild -us -uc -ui

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: chatgpt_${{ matrix.arch }}.deb
          path: ${{ github.workspace }}/deb_output/chatgpt_*_${{ matrix.arch }}.deb
          if-no-files-found: warn
